from shapely.geometry import Polygon, LineString
import geopandas as gpd
import matplotlib.pyplot as plt
import h3
from ImageProcessor import ImageProcessor


def plot_polygon(shapes: list):
    geos = gpd.GeoSeries(shapes)
    df = gpd.GeoDataFrame({"geometry": geos})
    df.plot()
    plt.show()


def get_list_intervals(l: list, n: int):
    length = len(l) - n
    step = length // (n - 1)

    return [l[i] for i in range(0, len(l), step)]


width = 800
height = 600
ip = ImageProcessor("map1.png", resize=[width, height])
segments = ip.find_contour_segments()

outer_track = ip.find_segment_points(segments[0])
inner_track = ip.find_segment_points(segments[1])
outer_polygon = Polygon(outer_track)
inner_poly = Polygon(inner_track)
track_poly = outer_polygon.difference(inner_poly)

divide_points = get_list_intervals(outer_track, 4)
line1 = LineString([(0, 0), (width, height)])
line2 = LineString([(0, height), (width, 0)])
line1_pol = line1.buffer(1e-6)
line2_pol = line2.buffer(1e-6)
new_polygon = track_poly.difference(line1_pol).difference(line2_pol)
print(new_polygon)
plot_polygon(new_polygon)


background = [(0, 0), (0, 600), (800, 600), (800, 0)]
outer_track = [(100, 100), (500, 100), (500, 400), (100, 400)]
inner_track = [(200, 200), (400, 200), (400, 300), (200, 300)]


background_polygon = Polygon(background)
outer_polygon = Polygon(outer_track)
inner_polygon = Polygon(inner_track)


diff = outer_polygon.difference(inner_polygon)
diff2 = background_polygon.difference(diff)
print(diff2.bounds)


def h3_fill_shapely_poly(poly, res=10):
    """
    inputs:
            - poly: must be a shapely Polygon, cannot be any other shapely object
            - res: resolution (higher means more specific zoom)
    output:
            - h3_fill: a Python set() object, generated by polypill
    """
    coordinates = [[i[0], i[1]] for i in poly.exterior.coords]
    geo_json = {"type": "Polygon", "coordinates": [coordinates]}
    h3_fill = h3.polyfill(geo_json, res, geo_json_conformant=False)
    print(f"h3_fill =\n{type(h3_fill), h3_fill}")
    return h3_fill


r = h3_fill_shapely_poly(diff)
print(r)
print(type(r))
